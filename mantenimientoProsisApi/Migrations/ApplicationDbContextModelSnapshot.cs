// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mantenimientoProsisApi.Context;

namespace mantenimientoProsisApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mantenimientoProsisApi.Entities.DTCHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgreementNum")
                        .HasColumnType("int");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("DTCHeaders");
                });

            modelBuilder.Entity("mantenimientoProsisApi.Entities.DTCMovement", b =>
                {
                    b.Property<int>("MovementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DTCTechnicianId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MovementId");

                    b.HasIndex("DTCTechnicianId");

                    b.ToTable("DTCMovements");
                });

            modelBuilder.Entity("mantenimientoProsisApi.Entities.DTCTechnical", b =>
                {
                    b.Property<string>("ReferenceNum")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("AxaNum")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<int>("DTCHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnostic")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("ElaborationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FailureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FailureNum")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IncidentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LanesCatalogId")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpinionType")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReferenceNum");

                    b.HasIndex("DTCHeaderId")
                        .IsUnique();

                    b.HasIndex("LanesCatalogId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("DTCTechnicians");
                });

            modelBuilder.Entity("mantenimientoProsisApi.Entities.LanesCatalog", b =>
                {
                    b.Property<int>("CapufeLaneNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Lane")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("LaneType")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("SquareCatalogId")
                        .HasColumnType("int");

                    b.Property<int?>("SquaresCatalogSquareNum")
                        .HasColumnType("int");

                    b.HasKey("CapufeLaneNum");

                    b.HasIndex("SquaresCatalogSquareNum");

                    b.ToTable("LanesCatalogs");
                });

            modelBuilder.Entity("mantenimientoProsisApi.Entities.SparePartsCatalog", b =>
                {
                    b.Property<string>("NumPart")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("DTCTecnicoReferenceNum")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("PieceYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("SparePartImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeService")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("NumPart");

                    b.HasIndex("DTCTecnicoReferenceNum");

                    b.ToTable("SparePartsCatalogs");
                });

            modelBuilder.Entity("mantenimientoProsisApi.Entities.SquaresCatalog", b =>
                {
                    b.Property<int>("SquareNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Delegation")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("SquareName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SquareNum");

                    b.ToTable("SquaresCatalogs");
                });

            modelBuilder.Entity("mantenimientoProsisApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("mantenimientoProsisApi.Entities.DTCMovement", b =>
                {
                    b.HasOne("mantenimientoProsisApi.Entities.DTCTechnical", "DTCTechnician")
                        .WithMany("DTCMovements")
                        .HasForeignKey("DTCTechnicianId");
                });

            modelBuilder.Entity("mantenimientoProsisApi.Entities.DTCTechnical", b =>
                {
                    b.HasOne("mantenimientoProsisApi.Entities.DTCHeader", null)
                        .WithOne("DTCTechnician")
                        .HasForeignKey("mantenimientoProsisApi.Entities.DTCTechnical", "DTCHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mantenimientoProsisApi.Entities.LanesCatalog", null)
                        .WithOne("DTCTechnician")
                        .HasForeignKey("mantenimientoProsisApi.Entities.DTCTechnical", "LanesCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mantenimientoProsisApi.Entities.User", null)
                        .WithMany("DTCTechnicians")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("mantenimientoProsisApi.Entities.LanesCatalog", b =>
                {
                    b.HasOne("mantenimientoProsisApi.Entities.SquaresCatalog", null)
                        .WithMany("LanesCatalog")
                        .HasForeignKey("SquaresCatalogSquareNum");
                });

            modelBuilder.Entity("mantenimientoProsisApi.Entities.SparePartsCatalog", b =>
                {
                    b.HasOne("mantenimientoProsisApi.Entities.DTCTechnical", "DTCTecnico")
                        .WithMany("SparePartsCatalogs")
                        .HasForeignKey("DTCTecnicoReferenceNum");
                });
#pragma warning restore 612, 618
        }
    }
}
